version: '3.9'

services:
  # -----------------------------
  # ZooKeeper (Kafka dependency)
  # -----------------------------
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    restart: unless-stopped

  # -----------------------------
  # Kafka Broker
  # -----------------------------
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9093:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - ./kafka/create-topics.sh:/create-topics.sh
    command: >
      bash -c "
        /etc/confluent/docker/run &
        sleep 20 &&
        bash /create-topics.sh &&
        wait
      "
    restart: unless-stopped

  # -----------------------------
  # Microsoft SQL Server (ticketingDB)
  # -----------------------------
  mssql:
    image: mcr.microsoft.com/azure-sql-edge:latest
    container_name: mssql
    ports:
      - "1435:1433"
    environment:
      ACCEPT_EULA: "Y"
      MSSQL_SA_PASSWORD: "YourStrong!Passw0rd"
    volumes:
      - ./mssql-data:/var/opt/mssql
    healthcheck:
      test: ["CMD", "sqlcmd", "-S", "localhost", "-U", "sa", "-P", "YourStrong!Passw0rd", "-Q", "SELECT 1"]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  # -----------------------------
  # MongoDB (optional microservice DB)
  # -----------------------------
  mongo:
    image: mongo:6
    container_name: mongo
    ports:
      - "27017:27017"
    volumes:
      - ./mongo-data:/data/db
    environment:
      MONGO_INITDB_DATABASE: smart_ticketing
    restart: unless-stopped

# -----------------------------
# Optional network (for isolation)
# -----------------------------
networks:
  default:
    name: smart-ticketing-network
